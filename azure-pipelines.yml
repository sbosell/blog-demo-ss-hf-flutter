# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      command: "restore"
      restoreSolution: "$(solution)"
      feedsToUse: "config"
      nugetConfigPath: "./BlogDemo/NuGet.Config"

  - task: PowerShell@2
    displayName: "DotNet Publish Applications and Zip"
    inputs:
      targetType: "inline"
      script: |

        git show -s > .\1.B4\B4\App.FrontEnd\Settings\version.txt

        "branch $(Build.SourceBranchName)" >>  .\1.B4\B4\App.FrontEnd\settings\version.txt


        dotnet publish ".\BlogDemo\BlogDemo\BlogDemo.csproj" -c Release -o $(Build.ArtifactStagingDirectory)\$(Build.BuildId)\artifacts\app


        7z a $(Build.ArtifactStagingDirectory)\$(Build.BuildId)\zip\app.zip $(Build.ArtifactStagingDirectory)\$(Build.BuildId)\artifacts\app\*

  - task: PublishBuildArtifacts@1
    displayName: "Upload Artifacts for use in release pipeline"
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)/zip"
      artifactName: "drop"

  # - task: VSBuild@1
  #   inputs:
  #     solution: "$(solution)"
  #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
  #     platform: "$(buildPlatform)"
  #     configuration: "$(buildConfiguration)"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"
